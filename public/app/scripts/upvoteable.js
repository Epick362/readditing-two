// Generated by CoffeeScript 1.6.2
// Original script Kudoable by http://www.akshitsethi.me/a-stylish-voting-system-using-jquery/
(function() {
  var Upvoteable,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Upvoteable = (function() {
    function Upvoteable(element) {
      this.element = element;
      this.unupvote = __bind(this.unupvote, this);
      this.complete = __bind(this.complete, this);
      this.end = __bind(this.end, this);
      this.start = __bind(this.start, this);
      this.bindEvents();
      this.counter = $('.count .num', this.element);
      this.element.data('upvoteable', this);
    }

    Upvoteable.prototype.bindEvents = function() {
      console.log(this.element);

      $(document).on('click', this.element, this.unupvote);
      $(document).on('touchstart mouseenter', this.element, this.start);
      $(document).on('touchend mouseleave', this.element, this.end);
    };

    Upvoteable.prototype.isUpvoteable = function() {
      return this.element.hasClass('upvoteable');
    };

    Upvoteable.prototype.isKudod = function() {
      return this.element.hasClass('complete');
    };

    Upvoteable.prototype.start = function() {
      if (this.isUpvoteable() && !this.isKudod()) {
        this.element.trigger('upvote:active');
        this.element.addClass('active');
        return this.timer = setTimeout(this.complete, 700);
      }
    };

    Upvoteable.prototype.end = function() {
      if (this.isUpvoteable() && !this.isKudod()) {
        this.element.trigger('upvote:inactive');
        this.element.removeClass('active');
        if (this.timer != null) {
          return clearTimeout(this.timer);
        }
      }
    };

    Upvoteable.prototype.complete = function() {
      this.end();
      this.incrementCount();
      this.element.addClass('complete');
      return this.element.trigger('upvote:added');
    };

    Upvoteable.prototype.unupvote = function(event) {
      event.preventDefault();
      if (this.isKudod()) {
        this.decrementCount();
        this.element.removeClass('complete');
        return this.element.trigger('upvote:removed');
      }
    };

    Upvoteable.prototype.setCount = function(count) {
      return this.counter.html(count);
    };

    Upvoteable.prototype.currentCount = function() {
      return parseInt(this.counter.html());
    };

    Upvoteable.prototype.incrementCount = function() {
      return this.setCount(this.currentCount() + 1);
    };

    Upvoteable.prototype.decrementCount = function() {
      return this.setCount(this.currentCount() - 1);
    };

    return Upvoteable;

  })();

  jQuery(function($) {
    return $.fn.upvoteable = function() {
      return this.each(function() {
        return new Upvoteable($(this));
      });
    };
  });

}).call(this);